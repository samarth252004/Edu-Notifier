{"version":3,"sources":["rexes/scalar/notify.ts"],"names":[],"mappings":";;;;;;AAAA,sBAAsC,SAAS,CAAC,CAAA;AAIhD,sBAAuB,UAAU,CAAC,CAAA;AAClC;;GAEG;AAEH;IAAkC,6BAAY;IAS7C,mBAAoB,MAAqB,EAAE,QAAuD;QATnG,iBAyCC;QA/BC,iBAAO,CAAC;QADW,WAAM,GAAN,MAAM,CAAe;QARzC,SAAI,GAAc;YACjB,IAAI,EAAG,IAAI;YACX,UAAU,EAAG,KAAK;YAClB,IAAI,EAAG,gBAAQ,CAAC,OAAO;SACvB,CAAC;QAMD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAA;QACzD,IAAI,QAAQ,GAAG,UAAC,MAAwB;YACvC,IAAI,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;YACnC,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC7B,CAAC;YAED,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,EAAE,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC,CAAC;QACjE,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,EAAE,CAAC;IACrB,CAAC;IAED,sBAAI,4BAAK;aAAT;YACC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC1B,CAAC;aAED,UAAU,QAAY;YACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC9B,CAAC;;;OALA;IAOD,yBAAK,GAAL;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YAAC,MAAM,CAAC;QAC1B,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAE,EAAT,CAAS,CAAC,CAAC;QAClF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QACjE,gBAAK,CAAC,KAAK,WAAE,CAAC;IACf,CAAC;IACF,gBAAC;AAAD,CAzCA,AAyCC,CAzCiC,iBAAS,GAyC1C;AAzCY,iBAAS,YAyCrB,CAAA","file":"rexes/scalar/notify.js","sourcesContent":["import {RexScalar, ScalarChange} from \"./index\";\r\nimport {Subscription} from \"../../events/subscription\";\r\nimport {RexEvent} from \"../../events/rex-event\";\r\nimport {IRexInfo} from \"../base\";\r\nimport {RexNames} from '../names';\r\n/**\r\n * Created by Greg on 03/10/2016.\r\n */\r\n\r\nexport class RexNotify<T> extends RexScalar<T> {\r\n\tinfo : IRexInfo = {\r\n\t\tlazy : true,\r\n\t\tfunctional : false,\r\n\t\ttype : RexNames.Convert\r\n\t};\r\n\tprivate _parentToken : Subscription;\r\n\tprivate _notifierToken : Subscription;\r\n\tprivate _selfToken : Subscription;\r\n\tconstructor(private parent : RexScalar<T>, notifier : (change : ScalarChange<T>) => RexEvent<void>) {\r\n\t\tsuper();\r\n\t\tthis.depends.source = parent;\r\n\t\tthis._parentToken = parent.changed.on(this.changed).and()\r\n\t\tlet onChange = (change : ScalarChange<T>) => {\r\n\t\t\tlet newNotifier = notifier(change);\r\n\t\t\tif (this._notifierToken) {\r\n\t\t\t\tthis._notifierToken.close();\r\n\t\t\t}\r\n\r\n\t\t\tthis._notifierToken = newNotifier.on(() => this.notifyChange());\r\n\t\t};\r\n\t\tthis._selfToken = this.changed.on(onChange);\r\n\t\tthis.notifyChange();\r\n\t}\r\n\r\n\tget value() {\r\n\t\tthis.makeSureNotClosed();\r\n\t\treturn this.parent.value;\r\n\t}\r\n\r\n\tset value(newValue : T) {\r\n\t\tthis.makeSureNotClosed();\r\n\t\tthis.parent.value = newValue;\r\n\t}\r\n\r\n\tclose() {\r\n\t\tif (this.isClosed) return;\r\n\t\t[this._notifierToken, this._selfToken, this._parentToken].forEach(x => x.close());\r\n\t\tthis._parentToken = this._selfToken = this._notifierToken = null;\r\n\t\tsuper.close();\r\n\t}\r\n}"],"sourceRoot":"/src"}